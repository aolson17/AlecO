<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_char_stand</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///General

math_set_epsilon(0.000000001)

image_speed = .3
start_x = x
start_y = y
hsp = 0
vsp = 0
cury = 0
curx = 0

jump = 0

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement

image_speed = .2//hsp * .04


if(mouse_x&gt;x) {
    face = 1
} else {
    face = -1
}


//Variables
grav = 1
jumpspeed = 18
jumpstoprate = .8
acceleration = .2
fallspeed = 30
xfriction = .3
stepheight = 8
walkspeed = 5
sprintspeed = 10
movespeed = walkspeed*!keyboard_check(vk_shift) + sprintspeed*keyboard_check(vk_shift)

//Movement
key_right = keyboard_check(ord("D"));
key_left = -keyboard_check(ord("A"));
key_jump = keyboard_check(vk_space);

move = key_left + key_right;
hsp = move * movespeed*acceleration;


mask_index = spr_char_fall
if (place_meeting(x,y+1,par_wall)||place_meeting(x,y-1,par_wall)){
    cury = 0
    if place_meeting(x,y-1,par_wall){// stop jump at ceiling
        jump = 0
    }
}
mask_index = spr_char_stand

//Set Jump State
vsp = 0
if key_jump{
    if place_meeting(x,y+1,par_wall){
        jump = 1
        vsp = key_jump * -jumpspeed
        show_debug_message("Jump");
    }
}

//Manage Jump
if jump = 1{
    if cury &gt; 0{//if falling
        jump = 0
    }else if !key_jump{
        cury *= jumpstoprate
        jump = 0
        show_debug_message("Limit Jump");
    }
}


if cury &lt; -jumpspeed {// Limit jump speed
    cury = -jumpspeed
}


cury += vsp// apply jump
if (cury &lt; fallspeed)cury += grav ;//Apply Gravity
if curx+hsp &lt; movespeed+(movespeed*acceleration) &amp;&amp; curx+hsp &gt; -movespeed-(movespeed*acceleration){// Limit run speed
    curx += hsp
}
if (place_meeting(x,y+1,par_wall)){//apply friction
    
    if curx &gt; 0 &amp;&amp; move&lt;=0{
        curx -= curx*xfriction
    }else if curx &lt; 0 &amp;&amp; move&gt;=0{
        curx -= curx*xfriction
    }
    if curx &lt;= 1 &amp;&amp; curx &gt;= -1 &amp;&amp; curx != 0 &amp;&amp; move = 0{curx = 0;show_debug_message("yu6idyiy")}
}


// Horizontal Collision
if place_meeting(x+curx,y,par_wall){
    if move != 0{// Only step up if keys are pressed
        for (i = 0; i &lt; stepheight; i += 1){// i &lt; max step up
            if place_meeting(x+curx,y-i,par_wall){
                show_debug_message("Horizontal Wall At " + string(i));
                //Pixel Perfect Collision
                if place_meeting(x+sign(curx),y,par_wall){
                }else{
                    //move horizontally 1 pixel
                    x += sign(curx)
                }
            }else{
                //move horizontally and up ramp
                x += curx
                y -= i
                show_debug_message("Move Up " + string(i));
                break
            }
        }
    }
}else{
    //move horizontally
    x += curx
}

var tempmask = mask_index
mask_index = spr_char_run
if place_meeting(x+sign(curx),y,par_wall){// set curx to 0 if against wall
    curx = 0
}
mask_index = tempmask

//Vertical Collision
if place_meeting(x,y+cury,par_wall){
    //Pixel Perfect Collision
    for (i = abs(floor(cury)); i &gt; 0; i -= 1){
        if place_meeting(x,y + sign(cury) * i,par_wall){
        }else{
            mask_index = spr_char_fall
            if (place_meeting(x,y + sign(cury) * i,par_wall)){
                if sign(cury) &lt; 0{cury = 0}
                show_debug_message("ceiling");
            }
            mask_index = spr_char_stand
            
            y += sign(cury) * i
            
            show_debug_message("Success");
            break
        }
    }    
}else{
    //move vertically
    y+=cury
}



mask_index = spr_char_stand
if place_meeting(x,y,par_wall){

show_debug_message("Bad Collision")

xtemp = x
cxplus = 0
while place_meeting(x,y,par_wall){// +x check
    x += .1
    cxplus += .1
    if !place_meeting(x,y,par_wall){
        show_debug_message("cxplus done" + string(cxplus))
    }
}
x = xtemp
cxminus = 0
while place_meeting(x,y,par_wall){// -x check
    x -= .1
    cxminus += .1
    if !place_meeting(x,y,par_wall){
        show_debug_message("cxminus done" + string(cxminus))
    }
}
x = xtemp
ytemp = y
cyplus = 0
while place_meeting(x,y,par_wall){// +y check
    y += .1
    cyplus += .1
    if !place_meeting(x,y,par_wall){
        show_debug_message("cyplus done" + string(cyplus))
    }
}
y = ytemp
cyminus = 0
while place_meeting(x,y,par_wall){// -y check
    y -= .1
    cyminus += .1
    if !place_meeting(x,y,par_wall){
        show_debug_message("cyminus done" + string(cyminus))
    }
}
y = ytemp

if cxplus &lt; cxminus &amp;&amp; cxplus &lt; cyplus &amp;&amp; cxplus &lt; cyminus{//cxplus is smallest
    x += cxplus
    show_debug_message("cxplus" + string(cxplus))
}else if cxminus &lt; cxplus &amp;&amp; cxminus &lt; cyplus &amp;&amp; cxminus &lt; cyminus{//cxminus is smallest
    x -= cxminus
    show_debug_message("cxminus" + string(cxminus))
}else if cyplus &lt; cyminus &amp;&amp; cyplus &lt; cxplus &amp;&amp; cyplus &lt; cxminus{//cyplus is smallest
    y += cyplus
    show_debug_message("cyplus" + string(cyplus))
}else if cyminus &lt; cyplus &amp;&amp; cyminus &lt; cxplus &amp;&amp; cyminus &lt; cxminus{//cyminus is smallest
    y -= cyminus
    show_debug_message("cyminus" + string(cyminus))
}

}

if (hsp &gt; 0.1 || hsp &lt; -.1){
    sprite_index = spr_char_run
    if face = 1 {image_xscale = 1} else{
    image_xscale = -1}
} else {
    sprite_index = spr_char_stand
    if face = 1 {image_xscale = 1} else{
    image_xscale = -1}
}
if cury &gt; 3{
    sprite_index = spr_char_fall
    if face = 1 {image_xscale = 1} else{
    image_xscale = -1}
}
if cury &lt; -3{
    sprite_index = spr_char_jump
    if face = 1 {image_xscale = 1} else{
    image_xscale = -1}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Views


view_xview[0] = x-view_wview[0]/2
view_yview[0] = y-view_hview[0]/2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = mouse_x
y = mouse_y
cury = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white)
draw_text(10,10,"curx: " + string(curx))
draw_text(10,20,"cury: " + string(cury))
draw_text(10,40,"hsp: " + string(hsp))
draw_text(10,50,"vsp: " + string(vsp))
draw_text(10,70,"jump: " + string(jump))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>331</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_restart_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>332</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
